{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\Coding\\\\stock-management\\\\frontend\\\\src\\\\components\\\\ItemList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { API_URL } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemList() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true); // Menambahkan state untuk loading\n\n  useEffect(() => {\n    // Menarik data dari API\n    fetch(`${API_URL}/api/items`).then(res => res.json()).then(data => {\n      setItems(data);\n      setLoading(false); // Set loading ke false setelah data berhasil diambil\n    }).catch(error => {\n      console.error('Error fetching items:', error);\n      setLoading(false); // Set loading ke false jika ada error\n    });\n  }, []); // Empty dependency array berarti useEffect hanya dijalankan sekali saat komponen di-mount\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this); // Menampilkan loading message saat data sedang ditarik\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Item List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), items.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) // Menampilkan pesan jika tidak ada data\n    : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.item_code, \" - \", item.name, \" (\", item.uom, \")\"]\n      }, item.item_code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ItemList, \"X0A+44AtCQpjgFsTFhgdow3TGVs=\");\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","useEffect","useState","API_URL","jsxDEV","_jsxDEV","ItemList","_s","items","setItems","loading","setLoading","fetch","then","res","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","item_code","name","uom","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/Coding/stock-management/frontend/src/components/ItemList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { API_URL } from '../api';\r\n\r\nfunction ItemList() {\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(true); // Menambahkan state untuk loading\r\n\r\n  useEffect(() => {\r\n    // Menarik data dari API\r\n    fetch(`${API_URL}/api/items`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setItems(data);\r\n        setLoading(false); // Set loading ke false setelah data berhasil diambil\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching items:', error);\r\n        setLoading(false); // Set loading ke false jika ada error\r\n      });\r\n  }, []); // Empty dependency array berarti useEffect hanya dijalankan sekali saat komponen di-mount\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Menampilkan loading message saat data sedang ditarik\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Item List</h2>\r\n      {items.length === 0 ? (\r\n        <p>No items available.</p> // Menampilkan pesan jika tidak ada data\r\n      ) : (\r\n        <ul>\r\n          {items.map((item) => (\r\n            <li key={item.item_code}>\r\n              {item.item_code} - {item.name} ({item.uom})\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAC,GAAGT,OAAO,YAAY,CAAC,CAC1BU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdP,QAAQ,CAACO,IAAI,CAAC;MACdL,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,oBACEnB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBhB,KAAK,CAACiB,MAAM,KAAK,CAAC,gBACjBpB,OAAA;MAAAe,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAAA,eAE3BnB,OAAA;MAAAe,QAAA,EACGZ,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACdtB,OAAA;QAAAe,QAAA,GACGO,IAAI,CAACC,SAAS,EAAC,KAAG,EAACD,IAAI,CAACE,IAAI,EAAC,IAAE,EAACF,IAAI,CAACG,GAAG,EAAC,GAC5C;MAAA,GAFSH,IAAI,CAACC,SAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjB,EAAA,CAtCQD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}